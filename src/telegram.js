// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /process
bot.onText(/\/process (.+) (.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏ –æ—á–∏—â–∞–µ–º URL –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
  let meetingUrl = match[1].replace(/[\[\]]/g, ''); // –£–¥–∞–ª—è–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏
  const leadId = match[2].replace(/[\[\]]/g, ''); // –£–¥–∞–ª—è–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http/https
  if (!meetingUrl.startsWith('http')) {
    meetingUrl = 'https://' + meetingUrl;
  }
  
  console.log(`Processing meeting: ${meetingUrl}, lead: ${leadId}`);
  
  try {
    await bot.sendMessage(chatId, 'üöÄ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å—Ç—Ä–µ—á–∏...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    const response = await axios.post(`http://localhost:${config.port}/process-meeting`, {
      meetingUrl,
      leadId
    });
    
    if (response.data.success) {
      await bot.sendMessage(chatId, '‚úÖ –í—Å—Ç—Ä–µ—á–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞! –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
    } else {
      await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${response.data.error}`);
    }
  } catch (error) {
    console.error('Error processing meeting:', error);
    await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: ${error.response?.data?.error || error.message}`);
  }
});
