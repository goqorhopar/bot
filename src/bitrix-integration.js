import axios from 'axios';
import { config } from './config.js';

class BitrixService {
  constructor() {
    this.baseUrl = config.bitrix.webhookUrl; // –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ config.js
    this.restUrl = `${this.baseUrl}/rest/${config.bitrix.userId}/${config.bitrix.webhookKey}`;
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ –≤—Å—Ç—Ä–µ—á–∏
  async updateLead(leadId, analysisResult, transcript, meetingUrl, logger) {
    try {
      logger.info({ leadId }, 'Updating Bitrix lead with meeting analysis');

      // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–¥–∞
      const updateData = {
        ID: leadId,
        fields: {
          // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
          COMMENTS: this.formatLeadComment(analysisResult, transcript, meetingUrl),
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–¥–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
          STATUS_ID: this.getStatusByCategory(analysisResult.category),
          
          // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é –æ—Ü–µ–Ω–∫—É –≤—Å—Ç—Ä–µ—á–∏ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø–æ–ª–µ
          'UF_CRM_MEETING_SCORE': analysisResult.overallScore,
          
          // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–ª–∏–µ–Ω—Ç–∞
          'UF_CRM_CLIENT_CATEGORY': analysisResult.category,
          
          // –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤—Å—Ç—Ä–µ—á–∏
          'UF_CRM_LAST_MEETING': new Date().toISOString(),
        }
      };

      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–¥
      const response = await axios.post(`${this.restUrl}/crm.lead.update/`, updateData);
      
      if (response.data.result) {
        logger.info({ leadId }, 'Lead updated successfully in Bitrix');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π) –∫ –ª–∏–¥—É
        await this.addLeadActivity(leadId, analysisResult, meetingUrl, logger);
        
        return { success: true, leadId };
      } else {
        throw new Error(response.data.error_description || 'Unknown Bitrix error');
      }

    } catch (error) {
      logger.error({ 
        leadId, 
        error: error.message,
        response: error.response?.data 
      }, 'Failed to update Bitrix lead');
      
      throw new Error(`Bitrix update failed: ${error.message}`);
    }
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫ –ª–∏–¥—É
  async addLeadActivity(leadId, analysisResult, meetingUrl, logger) {
    try {
      const activityData = {
        fields: {
          OWNER_TYPE_ID: 1, // –õ–∏–¥
          OWNER_ID: leadId,
          TYPE_ID: 4, // –í—Å—Ç—Ä–µ—á–∞
          SUBJECT: '–ê–Ω–∞–ª–∏–∑ –≤—Å—Ç—Ä–µ—á–∏ —á–µ—Ä–µ–∑ Meeting Bot',
          DESCRIPTION: this.formatActivityDescription(analysisResult, meetingUrl),
          COMPLETED: 'Y',
          PRIORITY: this.getPriorityByCategory(analysisResult.category),
          RESPONSIBLE_ID: config.bitrix.responsibleId || 1,
          START_TIME: new Date().toISOString(),
          END_TIME: new Date().toISOString()
        }
      };

      const response = await axios.post(`${this.restUrl}/crm.activity.add/`, activityData);
      
      if (response.data.result) {
        logger.info({ leadId, activityId: response.data.result }, 'Activity added to lead');
        return response.data.result;
      }

    } catch (error) {
      logger.error({ leadId, error: error.message }, 'Failed to add activity to lead');
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–ª–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≤—Å—Ç—Ä–µ—á–∏
  async createTask(leadId, analysisResult, logger) {
    try {
      const taskTitle = `–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏–¥–∞ –ø–æ—Å–ª–µ –≤—Å—Ç—Ä–µ—á–∏ - ${analysisResult.category} –∫–∞—Ç–µ–≥–æ—Ä–∏—è`;
      const taskDescription = this.formatTaskDescription(analysisResult);

      const taskData = {
        fields: {
          TITLE: taskTitle,
          DESCRIPTION: taskDescription,
          RESPONSIBLE_ID: config.bitrix.responsibleId || 1,
          PRIORITY: this.getPriorityByCategory(analysisResult.category),
          DEADLINE: this.getDeadlineByCategory(analysisResult.category),
          UF_CRM_TASK: [`L_${leadId}`], // –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –ª–∏–¥—É
          GROUP_ID: config.bitrix.projectId || null
        }
      };

      const response = await axios.post(`${this.restUrl}/tasks.task.add/`, taskData);
      
      if (response.data.result?.task?.id) {
        logger.info({ 
          leadId, 
          taskId: response.data.result.task.id 
        }, 'Task created for lead');
        
        return response.data.result.task.id;
      }

    } catch (error) {
      logger.error({ leadId, error: error.message }, 'Failed to create task');
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏–¥–µ
  async getLead(leadId, logger) {
    try {
      const response = await axios.get(`${this.restUrl}/crm.lead.get/?id=${leadId}`);
      
      if (response.data.result) {
        return response.data.result;
      } else {
        throw new Error('Lead not found');
      }

    } catch (error) {
      logger.error({ leadId, error: error.message }, 'Failed to get lead from Bitrix');
      throw error;
    }
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è –ª–∏–¥–∞
  formatLeadComment(analysisResult, transcript, meetingUrl) {
    const date = new Date().toLocaleString('ru-RU');
    
    return `
ü§ñ –ê–ù–ê–õ–ò–ó –í–°–¢–†–ï–ß–ò (${date})

üîó –°—Å—ã–ª–∫–∞ –≤—Å—Ç—Ä–µ—á–∏: ${meetingUrl}
‚≠ê –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: ${analysisResult.overallScore}/100
üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–ª–∏–µ–Ω—Ç–∞: ${analysisResult.category}

üìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê:
${Object.entries(analysisResult.points || {}).map(([key, value]) => 
  `${key}. ${value.score}/10 - ${value.comment}`
).join('\n')}

üí° –†–ï–ó–Æ–ú–ï:
${analysisResult.summary}

üìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
${this.getRecommendationsByCategory(analysisResult.category)}

–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –≤—Å—Ç—Ä–µ—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ.
    `.trim();
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  formatActivityDescription(analysisResult, meetingUrl) {
    return `
–ü—Ä–æ–≤–µ–¥–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤—Å—Ç—Ä–µ—á–∏ —á–µ—Ä–µ–∑ Meeting Bot.

–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
- –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: ${analysisResult.overallScore}/100
- –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–ª–∏–µ–Ω—Ç–∞: ${analysisResult.category}
- –°—Å—ã–ª–∫–∞ –≤—Å—Ç—Ä–µ—á–∏: ${meetingUrl}

–†–µ–∑—é–º–µ: ${analysisResult.summary}

–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ª–∏–¥—É.
    `.trim();
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
  formatTaskDescription(analysisResult) {
    const actions = this.getActionsByCategory(analysisResult.category);
    
    return `
–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏–¥–∞ –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ –≤—Å—Ç—Ä–µ—á–∏:

–ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–ª–∏–µ–Ω—Ç–∞: ${analysisResult.category}
–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: ${analysisResult.overallScore}/100

–ù–ï–û–ë–•–û–î–ò–ú–´–ï –î–ï–ô–°–¢–í–ò–Ø:
${actions.map(action => `‚Ä¢ ${action}`).join('\n')}

–†–µ–∑—é–º–µ –≤—Å—Ç—Ä–µ—á–∏: ${analysisResult.summary}
    `.trim();
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
  getStatusByCategory(category) {
    const statusMap = {
      'A': 'IN_PROCESS', // –ì–æ—Ä—è—á–∏–π - –≤ —Ä–∞–±–æ—Ç–µ
      'B': 'PROCESSED',  // –¢–µ–ø–ª—ã–π - –æ–±—Ä–∞–±–æ—Ç–∞–Ω
      'C': 'JUNK'        // –•–æ–ª–æ–¥–Ω—ã–π - –æ—Ç–∫–∞–∑
    };
    
    return statusMap[category] || 'NEW';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  getPriorityByCategory(category) {
    const priorityMap = {
      'A': '2', // –í—ã—Å–æ–∫–∏–π
      'B': '1', // –°—Ä–µ–¥–Ω–∏–π
      'C': '0'  // –ù–∏–∑–∫–∏–π
    };
    
    return priorityMap[category] || '1';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–¥–ª–∞–π–Ω–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  getDeadlineByCategory(category) {
    const now = new Date();
    const deadlineMap = {
      'A': 1, // –ì–æ—Ä—è—á–∏–π - 1 –¥–µ–Ω—å
      'B': 3, // –¢–µ–ø–ª—ã–π - 3 –¥–Ω—è
      'C': 7  // –•–æ–ª–æ–¥–Ω—ã–π - 7 –¥–Ω–µ–π
    };
    
    const days = deadlineMap[category] || 3;
    now.setDate(now.getDate() + days);
    
    return now.toISOString().split('T')[0];
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  getRecommendationsByCategory(category) {
    const recommendations = {
      'A': [
        '‚úÖ –°—Ä–æ—á–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
        'üìû –ù–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—É—é –≤—Å—Ç—Ä–µ—á—É –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 –¥–Ω–µ–π',
        'üí∞ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞',
        'üéØ –ü—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è –∏ –¥–µ—Ç–∞–ª–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è'
      ],
      'B': [
        'üìã –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é —É—Å–ª—É–≥',
        'üìû –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–≤–æ–Ω–æ–∫ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é',
        'üí° –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫–µ–π—Å—ã —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤',
        'ü§ù –û–±—Å—É–¥–∏—Ç—å –ø–∏–ª–æ—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç'
      ],
      'C': [
        'üìß –î–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–∑—É –¥–ª—è email-—Ä–∞—Å—Å—ã–ª–∫–∏',
        '‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü',
        'üìö –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
        'üéØ –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥–∞'
      ]
    };
    
    return recommendations[category]?.join('\n') || '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏–¥–∞';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  getActionsByCategory(category) {
    const actions = {
      'A': [
        '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ö–ü –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è',
        '–ù–∞–∑–Ω–∞—á–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É —Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º',
        '–ü—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
        '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä'
      ],
      'B': [
        '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∫–æ–º–ø–∞–Ω–∏–∏',
        '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–≤–æ–Ω–æ–∫ —á–µ—Ä–µ–∑ 3-5 –¥–Ω–µ–π',
        '–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫–µ–π—Å—ã –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤',
        '–û–±—Å—É–¥–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏–ª–æ—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞'
      ],
      'C': [
        '–î–æ–±–∞–≤–∏—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É nurturing',
        '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π',
        '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞',
        '–û–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥—Ö–æ–¥ –¥–ª—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤'
      ]
    };
    
    return actions[category] || ['–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ª–∏–¥ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É'];
  }
}

export const bitrixService = new BitrixService();